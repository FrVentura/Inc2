{"name":"Inc2","tagline":"","body":"# Arvores Binarias\r\n\r\n### int height (ABin)\r\n```\r\nint max (int a, int b){\r\n\tif (a>b)\r\n\t\treturn a;\t\r\n\treturn b;\r\n}\r\n\r\n\r\nint height (ABin a){\r\n\tint count = 0;\r\n\tif (a)\r\n\t\tcount = (1+max(height(a->esq),height(a->dir)));\r\n\treturn count;\r\n}\r\n```\r\n\r\n\r\n### ABin cloneAB (ABin)\r\n```\r\nABin cloneAB (ABin a){\r\n\tif (a==NULL)\r\n\t\treturn NULL;\r\n\treturn newABin(a->valor,cloneAB(a->esq),cloneAB(a->dir));\r\n\t\r\n}\r\n```\r\n\r\n### void mirror (ABin *)\r\n```\r\nvoid mirror (ABin *a){\r\n\tABin aa = *a;\r\n\tif (aa==NULL)\r\n\t\treturn;\r\n\tmirror(&(aa->esq));\r\n\tmirror(&(aa->dir));\r\n\tABin temp = aa->esq;\r\n\taa->esq = aa->dir;\r\n\taa->dir = temp;\r\n}\r\n```\r\n\r\n### void inorder (ABin, LInt *)\r\n```\r\nvoid inorder (ABin a, LInt *l){\r\n\tif (a==NULL)\r\n\t\treturn;\r\n\tinorder(a->dir,l);\r\n\t*l= newLInt(a->valor,*l);\r\n\tinorder(a->esq,l);\r\n}\r\n```\r\n\r\n### void preorder (ABin, LInt *)\r\n```\r\nvoid preorder (ABin a, LInt *l){\r\n\tif (a==NULL)\r\n\t\treturn;\r\n\t*l = newLInt(a->valor,*l);\r\n\tpreorder(a->dir, l);\r\n\tpreorder(a->esq, l);\r\n}\r\n```\r\n\r\n### void posorder (ABin, LInt *)\r\n```\r\nvoid posorder (ABin a, LInt *l){\r\n\tif (a==NULL)\r\n\t\treturn;\r\n\tposorder(a->esq,l);\r\n\t*l = newLInt(a->valor, *l);\r\n\tposorder(a->dir,l); \r\n}\r\n```\r\n\r\n### int depth (ABin, int)\r\n```\r\nint depth (ABin a, int x){\r\n\tint level = 1;\r\n\tint tester = 0;\r\n\tif (a==NULL)\r\n\t\treturn -1;\r\n\tif (x > a->valor){\r\n\t\ttester = depth(a->dir,x);\r\n\t\tif (tester > -1)\r\n\t\t\tlevel = 1 + depth(a->dir, x);\r\n\t\telse\r\n\t\t\tlevel =-1;\r\n\t}\r\n\telse if (x < a->valor){\r\n\t\ttester = depth(a->esq,x);\r\n\t\tif (tester > -1)\r\n\t\t\tlevel = 1 + depth(a->esq, x);\r\n\t\telse\r\n\t\t\tlevel =-1;\r\n\t}\r\n\treturn level;\r\n}\r\n```\r\n\r\n### int freeAB (ABin)\r\n```\r\nint freeAB (ABin a){\r\n\tint count = 0;\r\n\tif (a==NULL)\r\n\t\treturn count;\r\n\tcount = 1 + freeAB(a->esq) + freeAB(a->dir);\r\n\t//a->esq = a->dir = NULL;\r\n\tfree(a);\r\n\treturn count;\r\n}\r\n```\r\n\r\n### int pruneAB (ABin *, int)\r\n```\r\nint pruneAB (ABin *a, int l){\r\n\tint level = l;\r\n\tif (level==0){\r\n\t\treturn freeAB(*a);\r\n\t\t(*a)->esq = NULL;\r\n\t\t(*a)->dir = NULL;\r\n\t}\r\n\tlevel --;\r\n\r\n\tif ((*a)->esq && (*a)->dir)\r\n\t\treturn \t(pruneAB(&((*a)->esq), level ) + pruneAB(&((*a)->dir), level ));\r\n\telse if (!(*a)->esq && (*a)->dir)\r\n\t\treturn pruneAB(&((*a)->dir), level);\r\n\telse if ((*a)->esq && !(*a)->dir)\r\n\t\treturn pruneAB(&((*a)->esq), level);\r\n\t\r\n\t//if (!(*a)->esq && !(*a)->dir)\r\n\treturn 0;\r\n}\r\n```\r\n\r\n### int iguais (ABin, ABin)\r\n```\r\nint min(int a, int b){\r\n\tif (a<b)\r\n\t\treturn a;\r\n\treturn b;\r\n}\r\n\r\nint iguais (ABin a, ABin b){\r\n\tif ((!a && b) || (a && !b) )\r\n\t\treturn 0;\r\n\telse if (a && b && a->valor != b->valor)\r\n\t\treturn 0;\r\n\tint r = 1;\r\n\tif (a && b)\r\n\t\tr = min(iguais(a->esq,b->esq), iguais(a->dir,b->dir));\r\n\treturn r;\r\n}\r\n```\r\n\r\n\r\n### LInt nivel (ABin, int)\r\n```\r\nLInt nivel (ABin a, int n){\r\n\tLInt l;\r\n\tif (!a)\r\n\t\treturn NULL;\r\n\tif (n==1){\r\n\t\tl = newLInt(a->valor, NULL);\r\n\t\treturn l;\r\n\t}\r\n\tLInt head;\r\n\tl = nivel(a->esq, n-1);\r\n\tif (l){\r\n\t\thead = l;\r\n\t\twhile (l->prox)\r\n\t\t\tl = l->prox;\r\n\t\tl->prox = nivel(a->dir, n-1);\r\n\t}\r\n\telse {\r\n\t\tl = nivel(a->dir, n-1);\r\n\t\thead = l;\r\n\t}\r\n\treturn head;\r\n}\r\n```\r\n\r\n### nivelArray (ABin, int, int v[])\r\n```\r\nint nivelArray (ABin a, int n, int v[]){\r\n\tint* temp = v;\r\n\tif (a==NULL)\r\n\t\treturn 0;\r\n\tif (n==1){\r\n\t\tv[0] = a->valor;\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\tn--;\r\n\t\tv+=nivelArray(a->esq,n,v);\r\n\t\tv+=nivelArray(a->dir,n,v);\r\n\t}\r\n\treturn v - temp;\r\n}\r\n```\r\n\r\n### int dumpABin (ABin, int v[], int)\r\n```\r\nint dumpAbin (ABin a, int v[], int N){\r\n\tint temp1, temp2;\r\n\tif (a==NULL|| N<0)\r\n\t\treturn 0;\r\n\r\n\ttemp1=dumpAbin(a->esq, v, N);\r\n\tN-=temp1;\r\n\tv+=temp1;\r\n\t*v = (a->valor);\r\n\tN--;\r\n\ttemp2=dumpAbin(a->dir,v+1,N);\r\n\r\n\treturn temp2+temp1+1;\r\n}\r\n```\r\n\r\n### ABin somasAB (ABin)\r\n```\r\nABin somasAB (ABin a){\r\n\tif (a==NULL)\r\n\t\treturn NULL;\r\n\tABin r = newABin(a->valor,NULL,NULL);\r\n\r\n\tint z = a->valor;\r\n\r\n\tif (a->esq && a->dir)\r\n\t\tz= somasAB(a->esq)->valor + somasAB(a->dir)->valor;\r\n\telse if (a->esq == NULL && a->dir)\r\n\t\tz = somasAB(a->dir)->valor;\r\n\telse if (a->esq && a->dir == NULL)\r\n\t\tz = somasAB(a->esq)->valor;\r\n\telse if (a->esq == NULL && a->dir==NULL)\r\n\t\tz = a->valor;\r\n\r\n\tr = newABin(z,somasAB(a->esq),somasAB(a->dir));\r\n\t\r\n\treturn r;\r\n}\r\n```\r\n\r\n### int contaFolhas (ABin)\r\n```\r\nint contaFolhas (ABin a){\r\n\tif (!a)\r\n\t\treturn 0;\r\n\tif (a->esq == NULL && a->dir == NULL)\r\n\t\treturn 1;\r\n\tint r = 0;\r\n\tr += contaFolhas(a->esq)+contaFolhas(a->dir);\r\n\treturn r;\r\n}\r\n```\r\n\r\n\r\n### ABin mirror2(ABin)\r\n```\r\nABin mirror2 (ABin a){\r\n\tif (!a)\r\n\t\treturn NULL;\r\n\tABin r = newABin(a->valor,mirror2(a->dir),mirror2(a->esq));\r\n\t\r\n\treturn r;\r\n}\r\n```\r\n\r\n### int add (ABin *, int)\r\n```\r\nint add (ABin *a, int x){\r\n\tif (!*a){\r\n\t\t*a = newABin (x,NULL,NULL);\r\n\t\treturn 0;\r\n\t}\r\n\telse if ((*a)->valor == x){\r\n\t\treturn 1;\r\n\t}\r\n\telse if ((*a)->valor < x){\r\n\t\tadd (&((*a)->dir),x);\r\n\t}\r\n\telse if ((*a)->valor > x){\r\n\t\tadd (&((*a)->esq),x);\r\n\t}\r\n\treturn 1;\r\n}\r\n```\r\n\r\n### int lookup (ABin, int)\r\n```\r\nint lookup (ABin a, int x){\r\n\tif (!a)\r\n\t\treturn 0;\r\n\telse if (a->valor == x)\r\n\t\treturn 1;\r\n\tint z = 0;\r\n\tz+=lookup(a->esq,x);\r\n\tz+=lookup(a->dir,x);\r\n\treturn z;\r\n}\r\n```\r\n\r\n### int maior (ABin)\r\n```\r\nint maior (ABin a){\r\n\twhile (a->dir)\r\n\t\ta = a->dir;\r\n\treturn a->valor;\r\n}\r\n```\r\n\r\n### void removeMaiorAB (ABin *)\r\n```\r\nvoid removeMaiorAB (ABin *a){\r\n\tABin iter = *a;\r\n\tif (!iter)\r\n\t\treturn;\r\n\tABin ante = iter;\r\n\titer = iter->dir;\r\n\twhile (iter->dir){\r\n\t\tante = iter;\r\n\t\titer = iter->dir;\r\n\t}\r\n\tfree(iter);\r\n\tante->dir = NULL;\r\n}\r\n```\r\n\r\n### int maiores (ABin, int)\r\n```\r\nint maiores (ABin a, int x){\r\n\tif (!a)\r\n\t\treturn 0;\r\n\tif (a->valor > x)\r\n\t\treturn 1 + maiores(a->esq, x) + maiores(a->dir, x);\r\n\telse\r\n\t\treturn maiores(a->esq, x) + maiores (a->dir, x);\r\n}\r\n```\r\n\r\n### void fromList (LInt, ABin *)\r\n```\r\nvoid fromList (LInt l, ABin *a){\r\n\tif (!l)\r\n\t\treturn ;\r\n\t*a = newABin(l->valor,NULL,NULL);\r\n\tl=l->prox;\r\n\tint x;\r\n\twhile(l){\r\n\t\tadd(a,l->valor);\r\n\t\tl=l->prox;\r\n\t}\r\n}\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}